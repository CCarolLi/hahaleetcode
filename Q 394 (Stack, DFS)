5.29.2020 // Q 394 (Stack, DFS)


class Solution(object):
    def decodeString(self, s):
        """
        :type s: str
        :rtype: str
        """
        # Stack, DFS
        stack = []
        # res = ""
        
        for c in s:
            if c == ']':  
            # process all chars in stack temp
            # we process in reverse order and 
            # deal with the innermost brackets first
                curstr = ""
                while stack:
                    val = stack.pop()
                    if val == '[':
                        break
                    curstr = val + curstr
                curcount = ""
                while stack and stack[-1].isdigit():
                    curcount = stack.pop() + curcount
                # for i in range(int(curcount)):
                #     res += curstr
                stack.append(int(curcount) * curstr)  
                # we need to append to stack again instead of 
                # adding to the res because there may be 
                # outer brackets so that we need to append 
                # current string to the res again
            else:
                stack.append(c)
        return ''.join(stack)
