5.22.2020  // Q 496ï¼Œ503 (Stack)
5.26.2020 // Q 739 
- stack = []
- stack.pop(), stack.append()
- (peak): s[-1]

- for i in range(len(nums)) * 2:  # do 2 for loops 

-for i, value in enumerate(T):

496. Next Greater Element I
class Solution(object):
    def nextGreaterElement(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        nextGreater, res, s = {}, [], []
        for num in nums2:
            while len(s) != 0 and num > s[-1]:
                nextGreater[s.pop()] = num
            s.append(num)
        
        for num in nums1:
            res.append(nextGreater.get(num, -1))
        return res
 
 
503. Next Greater Element II
class Solution(object):
    def nextGreaterElements(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        if not nums or len(nums) == 0:
            return []
        res, stack = [-1] * len(nums), []
        for i in range(len(nums)) * 2:  # do 2 for loops 
            cur = nums[i]
            while stack and cur > nums[stack[-1]]:
                res[stack.pop()] = nums[i]
            stack.append(i)  # stack stores the index instead of the element
        return res


739. Daily Temperatures
class Solution(object):
    def dailyTemperatures(self, T):
        """
        :type T: List[int]
        :rtype: List[int]
        """
        # stack
        if not T or len(T) == 0:
            return []
        res = [0 for i in range(len(T))]
        stack = []
        
        for i, t in enumerate(T):
            while stack and t > T[stack[-1]]:
                prev = stack.pop()
                res[prev] = i - prev
            stack.append(i)
        return res
