5.18.2020 // Q 153 (Binary Search)


153. Find Minimum in Rotated Sorted Array
class Solution(object):
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        # Binary Search
        if not nums or len(nums) == 0:
            return 0
        if len(nums) == 1 or nums[len(nums) - 1] > nums[0]:
            # only one element or already sorted
            return nums[0] 
        left = 0
        right = len(nums) - 1
        while left < right:
            middle = (left + right) / 2
            if middle > 0 and nums[middle] < nums[middle - 1]:
                return nums[middle]
            if middle + 1 < len(nums) and nums[middle] > nums[middle + 1]:
                return nums[middle + 1]
            if nums[middle] < nums[left]:
                # element "middle" will be compared in the next loop two if's above
                right = middle - 1
            else:
                left = middle + 1
        return -1
        
        
154. Find Minimum in Rotated Sorted Array II
