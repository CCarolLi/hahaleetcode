5.18.2020 // Q 84 (Stack + Dynamic Programming)
- for loop decreasing:
for j in range(i, -1, -1):


Solution 1: O(n^2)
class Solution(object):
    def largestRectangleArea(self, heights):
        """
        :type heights: List[int]
        :rtype: int
        """
        # Solution 1: O(n^2)
        if not heights:
            return 0
        res = 0
        for i in range(len(heights)):
            if i + 1 < len(heights) and heights[i] <= heights[i + 1]:
                continue  # skip the value until a local peak
            else:
                # current height maximum
                cur = heights[i]
                width = 1
                curMin = float('inf')
                j = i
                for j in range(i, -1, -1):
                    curMin = min(curMin, heights[j])
                    res = max(res, width * curMin)
                    width += 1
        return res


Solution 2: Stack O(n)
https://www.youtube.com/watch?v=KkJrGxuQtYo
